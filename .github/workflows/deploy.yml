# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

# This workflow uses the einaregilsson/beanstalk-deploy action to deploy to Elastic Beanstalk.

name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    #env:
    #  POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
    #  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
    #  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    #  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
    #  POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
    #  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
    #  AUTH_URL: ${{ secrets.AUTH_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Deployment package

        run: |
          npm install

          npm run build

          zip -r deploy.zip . -x '*.git*' 'node_modules/**' '*.github*'
       #  zip -r deploy.zip .next package.json public Procfile -x '*.git*' -x 'node_modules/*'


      - name: Verify contents of deploy.zip
        run: unzip -l deploy.zip

    #  - name: Get timestamp
    #    uses: gerred/actions/current-time@master
    #    id: current-time

    #  - name: Run string replace
    #    uses: frabert/replace-string-action@master
    #    id: format-time
    #    with:
          # replaces '[:\.]+' in the timestamp with '-'
    #      pattern: '[:\.]+'
    #      string: '${{ steps.current-time.outputs.time }}'
    #      replace-with: '-'
    #      flags: 'g'

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: acme-app
          environment_name: Acme-app-env
        #  version_label: ${{ steps.format-time.outputs.replaced }}
          version_label: ${{ github.sha }}
          region: eu-north-1
          deployment_package: deploy.zip
          wait_for_deployment: true
          use_existing_version_if_available: true
